#!/usr/bin/php
<?php
	// load all .class.php files in a directory
	function classes_load( $dir = null, $flag_print = false )
	{
		if( ! $dir )
			throw new Exception('dir not specified');
		
		$dir = dirname(__FILE__).'/'.$dir;
		
		if( ! is_dir($dir) )
			throw new Exception('dir "'.$dir.'" not found');
		
		foreach( glob($dir.'/*.class.php') as $file )
		{
			if( is_dir($file) )
				continue;
			
			if( $flag_print )
				echo "loading: ".basename($file)."\n";
			
			require_once($file);
		}
	}
	
	echo "\nphpmira\n\n";
	
	try{
		classes_load('classes_core', 'print');
		
		/**
		 * revised workflow:
		 * 
		 * - instantiate Block
		 * 	- render plaintext to binary string (unfortunately)
		 *	- for (i = length of padded plaintext) do
		 *		- instantiate new Selection and Mutation from Block based upon
		 *		1st ordinal number (4b) and last ordinal number (4b)
		 *		- Selection->mutate()
		 *		- update Block cyphertext
		 *	- done
		 *	- render binary string to binary
		 */
		
		// TODO: complete prototype for debugging
		// $plaintext = 'AAAABBBBCCCCDDDDEEEEFFFFHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQ';
		
		$plaintext = '/   ';
		
		$block = new Block($plaintext);
		
		$binarystring = $block->to_binarystring($plaintext);
		
		$binarystring_before = $binarystring;
		
		$selection = Selection::select_all($binarystring);
		
		$selection['selected'] = Selection::mutate_shift($selection['selected'], -1);
		
		$binarystring_after = $block->merge( $selection );
		
		var_dump(
			$plaintext,
			$binarystring_before,
			$binarystring_after
		);
		exit(0);
	}
	catch( Exception $e )
	{
		echo "ERROR:\n\n".$e."\n\n";
	}
	
