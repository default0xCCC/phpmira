#!/usr/bin/php
<?php
	// load all .class.php files in a directory
	function classes_load( $dir = null, $flag_print = false )
	{
		if( ! $dir )
			throw new Exception('dir not specified');
		
		$dir = dirname(__FILE__).'/'.$dir;
		
		if( ! is_dir($dir) )
			throw new Exception('dir "'.$dir.'" not found');
		
		foreach( glob($dir.'/*.class.php') as $file )
		{
			if( is_dir($file) )
				continue;
			
			if( $flag_print )
				echo "loading: ".basename($file)."\n";
			
			require_once($file);
		}
	}
	
	try{
		classes_load('classes_core');
		
		/**
		 * revised workflow:
		 * 
		 * - instantiate Block
		 * 	- render plaintext to binary string (unfortunately)
		 *	- for (i = length of padded plaintext) do
		 *		- instantiate new Selection and Mutation from Block based upon
		 *		1st ordinal number (4b) and last ordinal number (4b)
		 *		- Selection->mutate()
		 *		- update Block cyphertext
		 *	- done
		 *	- render binary string to binary
		 */
		
		/**
		 * cli invocation
		 * 
		 * TODO: replace operation and mode with executable scripts for ease of use
		 * 
		 * required:
		 *  - input (string)
		 *  - input_file (path)
		 *  - mode (password | stream)
		 *  - number (iterations)
		 *  - operation (encode | decode)
		 *  - encoding (default:base64 | debug)
		 */
		
		$options_cli_map = array(
			'e::'	=> 'encoding::',
			'i::'	=> 'input::',
			'f::'	=> 'input_file::',
			'm::'	=> 'mode::',
			'n::'	=> 'number::',
			'o::'	=> 'operation::',
			'p::'	=> 'password::',
			'x::'	=> 'password_file::', // TODO
		);
		
		$options_cli_default = array(
			'encoding'	=> 'debug',
			'input'		=> '',
			'input_file'	=> '',
			'mode'		=> 'stream',
			'number'	=> 64,
			'operation'	=> 'encode',
			'password'	=> '',
			'password_file'	=> '', // TODO
		);
		
		$options_cli = getopt( implode(array_keys($options_cli_map)), $options_cli_map );
		
		$options_cli = array_merge($options_cli_default, $options_cli);
		
		$block = new Block($options_cli);
		
		$block->encode();
	}
	catch( Exception $e )
	{
		echo "\nERROR: ".$e->getMessage()."\n\n";
		echo "usage:\n";
		echo "./run --input=debug --mode=password --password=debug\n";
		exit(1);
	}
	
